/*
* This is a manifest file that'll be compiled into application.css, which will include all the files
* listed below.
*
* Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
* vendor/assets/stylesheets directory can be referenced here using a relative path.
*
* You're free to add application-wide styles to this file and they'll appear at the bottom of the
* compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
* files in this directory. Styles in this file should be added after the last require_* statement.
* It is generally better to create a new file per style scope.
*
*= require_tree .
*= require_self
*/

html,
body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
hr,
dl,
dd,
ol,
ul,
figure {
  margin: 0;
  padding: 0;
}

:root {
  --color-blue: #426FC5;
  --color-blue-rgb: 66, 111, 197;
  --color-green: #00897B;
  --color-green-rgb: 0, 137, 123;
  --color-orange: #F6774F;
  --color-orange-rgb: 246, 119, 79;
  --color-red: #E94043;
  --color-red-rgb: 233, 64, 67;

  --font-size-input-text: 1.2rem;
  --font-size-input-label: 1.rem;
}

.light-theme {
}

.dark-theme {
  --color-bg-one: #2B2B2B;
  --color-bg-one-rgb: 43, 43, 43;

  --color-bg-two: #1c1c1c;
  --color-bg-two-rgb: 28, 28, 28;

  --color-text: #EBEBEB;
  --color-text-rgb: 235, 235, 235;

  --color-link: #426FC5;
  --color-link-rgb: 66, 111, 197;

  --color-input-text-rgb: 28, 28, 28;

  --color-box-shadow-rgb: var(--color-text-rgb);
}

html {
  font-family: Noto, Roboto, 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
  font-size: 3rem;
  box-sizing: border-box;
  height: 100%;
  width: 100%;
}

body {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  min-width: 100%;
  min-height: 100%;
  background: var(--color-bg-one);
  color: var(--color-text);
}

header {
  display: flex;
  flex-direction: row;
  align-items: center;
  height: 3rem;
  margin: 0;
  padding: 0 .4rem;
  box-shadow: 0 .06rem .3rem rgb(0,0,0,.7);
  background: var(--color-bg-two);
  z-index: 2;
}

h1 {
  margin-top: 1rem;
  text-align: center;
}

main {
  background: var(--color-bg-one);
}

main a {
  color: var(--color-link);
}

.button-hamburger {
  box-sizing: border-box;
  width: 2.1rem;
  height: 2.1rem;
  cursor: pointer;
  background-color: transparent;
  border: 0;
  border-top: .4rem solid var(--color-text);
  border-bottom: .4rem solid var(--color-text);
}

.button-hamburger::before {
  box-sizing: border-box;
  content: "";
  display: block;
  width: 2.1rem;
  height: .4rem;
  margin-left: -.14rem;
  background: var(--color-text);
}

.nav.close {
  margin-top: -14.5rem;
  pointer-events: none;
}

.nav {
  min-width: 100%;
  margin-top: 0;
  transition: margin-top .3s ease-in-out;
}

.nav ul li {
  border-bottom: .12rem solid var(--color-text);
}

.nav ul li:last-child {
  color: #FF3849;
  border-bottom: .12rem solid #FF3849;
}

.nav ul li a {
  display:block;
  box-sizing: border-box;
  min-width: 100%;
  height: 3.5rem;
  padding: 1rem;
  font-size: 1rem;
  font-weight: bold;
  text-decoration: none;
  color: var(--color-text);
  background: var(--color-bg-two);
}

.nav ul li:last-child a {
  color: #FF3849;
}

.nav ul li a:hover, .nav ul li a:focus {
  background: #353337;
  color: var(--color-text);
  text-decoration: underline;
}

.nav ul li:last-child a:hover, .nav ul li:last-child a:focus {
  background: #353337;
  color: #FF3849;
}

.notices {
  margin: .5rem 0;
  text-align: left;
  font-size: .9rem;
}

.notices.notice {
  padding: .3rem .3rem;
  border-radius: .1rem;
  color: var(--color-blue);
  border: .05rem solid var(--color-blue);
  background: rgb(66, 111, 197, .05);
  text-shadow: .02rem .02rem .01rem rgb(66, 111, 197, .5);
}

.notices.alert {
  padding: .3rem .3rem;
  border-radius: .1rem;
  color: var(--color-orange);
  border: .05rem solid var(--color-orange);
  background: rgb(246, 119, 79, .05);
  text-shadow: .02rem .02rem .01rem rgb(246, 119, 79, .5);
}

#error_explanation {
  margin: 5%;
  color: var(--color-red);
  background: var(--color-bg-two);
}

#error_explanation ul {
  margin: 10%;
}

#error_explanation ul li {
  font-size: 1rem;
  padding: .5rem .2rem;
}

.field_with_errors label {
  color: var(--color-red);
}

.field_with_errors input, .field_with_errors textarea {
  border-color: var(--color-red) !important;
  box-shadow: 0 0 .4rem var(--color-red);
}

/* GENERAL */
.btn {
  flex: 1 100%;
  margin: .5rem;
  width: auto;

  padding: .8rem .2rem .8rem .5rem;
  border-radius: .2rem;

  font-size: 1rem;
  text-decoration: none;
  text-align: center;
  font-weight: bold;

  background: transparent;
  color: var(--btn-color);
  border: .1rem solid var(--btn-color);
  box-shadow: 0 0 .3rem rgba(var(--btn-color-rgb), .5);
  text-shadow: .03rem .03rem .02rem rgba(var(--btn-color-rgb), .5);

  transition: all .3s ease-in-out;
}

.btn-blue {
  --btn-color: var(--color-blue);
  --btn-color-rgb: var(--color-blue-rgb);
}

.btn-green {
  --btn-color: var(--color-green);
  --btn-color-rgb: var(--color-green-rgb);
}

.btn-orange {
  --btn-color: var(--color-orange);
  --btn-color-rgb: var(--color-orange-rgb);
}

.btn-red {
  --btn-color: var(--color-red);
  --btn-color-rgb: var(--color-red-rgb);
}

.btn::after,
.btn::before {
  content: "";
  position: absolute;
  display: block;
  box-shadow: inherit;
  background: var(--btn-color);
}

.btn:hover,
.btn:focus {
  text-decoration: underline;
  box-shadow: none;
  background: rgba(var(--btn-color-rgb), .2);
}

.btn-plus::after {
  width: 1rem;
  height: .25rem;
  margin-top: -.8rem;
  transform: rotate(90deg);
}

.btn-plus::before {
  width: 1rem;
  height: .25rem;
  margin-top: .5rem;
}

.btn-check::after {
  width: 1.2rem;
  height: .25rem;
  margin-top: -.8rem;
  margin-left: .39rem;
  transform: rotate(-45deg);
}

.btn-check::before {
  width: .8rem;
  height: .25rem;
  margin-top: .7rem;
  transform: rotate(45deg);
}

.btn-greater::after {
  width: .9rem;
  height: .25rem;
  margin-top: -1.1rem;
  transform: rotate(45deg);
}

.btn-greater::before {
  width: .9rem;
  height: .25rem;
  margin-top: .7rem;
  transform: rotate(-45deg);
}

.btn-cross::after {
  width: 1rem;
  height: .25rem;
  margin-top: -.8rem;
  transform: rotate(45deg);
}

.btn-cross::before {
  width: 1rem;
  height: .25rem;
  margin-top: .5rem;
  transform: rotate(-45deg);
}

.btn-bang::after {
  width: .25rem;
  height: .25rem;
  margin-top: -.3rem;
  margin-left: .32rem;
  transform: rotate(45deg);
}

.btn-bang::before {
  width: .9rem;
  height: .25rem;
  margin-top: .3rem;
  transform: rotate(90deg);
}

.btn-magnifier::after {
  height: .9rem;
  width: .9rem;
  margin-top: -1.6rem;
  background: transparent;
  border: .2rem solid var(--btn-color);
  border-radius: 50%;
}

.btn-magnifier::before {
  width: .7rem;
  height: .2rem;
  margin-top: 1rem;
  transform: rotate(112deg);
}

/* Index */
.actions {
  width: 94%;
  margin: 5% 3%;
  display: flex;
  flex-flow: row wrap;
  justify-content: space-between;
}

/* ABOUT DECK */

.none-deck {
  min-height: 100%;
  padding: 1rem;
  border: .1rem dashed rgb(200,200,204,.3);
  border-radius: .2rem;
  box-shadow: inset 0 0 .2rem .2rem rgb(0,0,0,.3);
}

.deck-list {
  display: flex;
  flex-flow: row wrap;
  justify-content: space-between;
}

.deck {
  display: flex;
  flex-direction: column;
  width: 100%;
  margin: 5%;
  background: rgba(var(--color-bg-two-rgb), .6);
  box-shadow: 0 0 .5rem rgba(0,0,0, .7);
}

.deck-info {
  display: flex;
  justify-content: space-between;
  text-decoration: none;
  margin: .5rem;
}

.deck-name {
  font-size: 1.5rem;
  text-align: left;
  font-weight: bold;
  text-shadow: .1rem .1rem .3rem rgb(255, 255, 255, .2);
}

.deck-review-todo {
  width: 1.5rem;
  height: 1.5rem;
  border-radius: 50%;
  background: rgba(var(--color-red-rgb), .3);
  border: .1rem solid var(--color-red);
  box-shadow: 0 0 .4rem rgba(var(--color-red-rgb), .5);
}

.deck-review-done {
  width: 1.5rem;
  height: 1.5rem;
  border-radius: 50%;
  background: rgba(var(--color-green-rgb), .3);
  border: .1rem solid var(--color-green);
  box-shadow: 0 0 .4rem rgba(var(--color-green-rgb), .5);
}

.deck-actions {
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
  margin: .5rem;
}

/* New */
.field {
  display: flex;
  flex-direction: column;
  max-width: 36rem;
  margin: 1rem;
}

.field label {
  font-size: var(--font-size-input-label);
  font-weight: bold;
}

.field input, .field textarea {
  flex: 1 100%;
  font-size: var(--font-size-input-text);
  color: var(--color-text);
  padding: .3rem .5rem;
  background: rgb(var(--color-input-text-rgb), .7);
  border: .03rem solid var(--color-text);
  border-radius: .2rem;
}

.field textarea {
  min-height: 6rem;
  max-height: 12rem;
}

.field input:focus,
.field input:hover,
.field textarea:focus,
.field textarea:hover  {
  box-shadow: 0 0 .3rem rgba(var(--color-box-shadow-rgb), .7);
}

.choose-color {
  --choose-color-size: 3rem;
  display: flex;
  height: var(--choose-color-size);
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
}

.choose-color input {
  display: none;
}

.choose-color label {
  width: var(--choose-color-size);
  height: var(--choose-color-size);
  border-radius: .2rem;
  box-shadow: inset .2rem .2rem .3rem rgb(0,0,0,.8);
}

.choose-color input:checked + label {
  box-shadow: .2rem .2rem .3rem rgb(0,0,0,.5);
}

.choose-color label::before, .choose-color label::after {
  content: "";
  display: block;
  position: absolute;
  background: #FFF;
}

.choose-color input:checked + label::before {
  width: 1.7rem;
  height: .4rem;
  margin-top: 1.25rem;
  margin-left: .2rem;
  transform: rotate(45deg);
  border-radius: .2rem 0 0 .2rem;
  box-shadow: 0 .1rem .2rem rgb(0, 0, 0,.5);
}

.choose-color input:checked + label::after {
  min-width: 2.7rem;
  min-height: .4rem;
  margin-top: .88rem;
  margin-left: 1rem;
  transform: rotate(-45deg);
  border-radius: 0 .2rem .2rem 0;
  box-shadow: 0 .1rem .15rem rgb(0, 0, 0,.5);
}

/* CARDS */

.choose-difficulty {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
}

.choose-difficulty input {
  display: none;
}

.choose-difficulty label {
  width: 5rem;
  height: 2rem;
  border-radius: .2rem;
  padding-top: .5rem;
  text-align: center;
  font-weight: normal;
  color: var(--color-text);
  border: .1rem solid var(--color-text);
  box-shadow: 0 0 .3rem rgb(204, 204, 204, .5);
  text-shadow: .03rem .03rem .02rem rgb(204, 204, 204, .5);
}

.choose-difficulty input:checked + label {
  font-weight: bold;
}

.choose-difficulty input[value="easy"]:checked + label {
  color: var(--color-green);
  border: .1rem solid var(--color-green);
  background: rgb(0, 137, 123, .1);
  text-shadow: .03rem .03rem .02rem rgb(0, 137, 123, .5);
  box-shadow: inset 0 0 .3rem rgb(0, 137, 123, .9);
}

.choose-difficulty input[value="medium"]:checked + label {
  color: var(--color-orange);
  border: .1rem solid var(--color-orange);
  background: rgb(246, 119, 79, .1);
  text-shadow: .03rem .03rem .02rem rgb(246, 119, 79, .5);
  box-shadow: inset 0 0 .3rem rgb(246, 119, 79, .9);
}

.choose-difficulty input[value="hard"]:checked + label {
  color: var(--color-red);
  border: .1rem solid var(--color-red);
  background: rgb(233, 64, 67, .1);
  text-shadow: .03rem .03rem .02rem rgb(233, 64, 67, .5);
  box-shadow: inset 0 0 .3rem rgb(233, 64, 67, .9);
}

/* Show card */

.show-text {
  padding: .3rem .5rem;
  font-size: 1rem;
  border-radius: .2rem;
  color: var(--color-text);
  background: rgb(28, 28, 28,.7);
}
